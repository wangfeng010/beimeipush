datasets:
  trainset:
    data_dir: data/train
    sep: "\t"
    chunksize: null
    file_num: 7
    header: null
    label_columns:
      - log_type
    raw_columns:
      - user_id
      - create_time
      - log_type
      - watchlists
      - holdings
      - country
      - prefer_bid
      - user_propernoun
      - push_title
      - push_content
      - item_code
      - item_tags
      - submit_type

features:
  process: # 普通单列数据的预处理
    embedding_dim: 8 # 可选，以下方数据管道优先
    pooling_type: sum # 仅针对varlen_sparse的特征，进行池化
    pipelines:
      - feat_name: hour
        feat_type: sparse
        vocabulary_size: 24
        embedding_dim: 8
        input_sample: "2024-08-02 00:44:05"
        operations:
          - col_in: create_time
            col_out: create_time
            func_name: fillna
            func_parameters:
              na_value: "2024-08-02 00:16:34"
          - col_in: create_time
            col_out: hour
            func_name: to_hour
            func_parameters: {}
      - feat_name: weekday
        feat_type: sparse
        vocabulary_size: 7
        embedding_dim: 8
        input_sample: "2024-08-02 00:44:05"
        operations:
          - col_in: create_time
            col_out: weekday
            func_name: to_weekday
            func_parameters: {}
      - feat_name: user_watch_stk_code_hash
        feat_type: varlen_sparse
        vocabulary_size: 10000
        embedding_dim: 8
        input_sample: AAPL_185 & TSLA_185
        operations:
          - col_in: watchlists
            col_out: watchlists
            func_name: fillna
            func_parameters:
              na_value: "null_0 & null_0"
          - col_in: watchlists
            col_out: watchlists
            func_name: split
            func_parameters:
              sep: " & "
          - col_in: watchlists
            col_out: watchlists
            func_name: seperation
            func_parameters:
              sep: "_"
          - col_in: watchlists
            col_out: user_watch_stk_code
            func_name: list_get
            func_parameters:
              item_index: 0
          - col_in: user_watch_stk_code
            col_out: user_watch_stk_code
            func_name: remove_items
            func_parameters:
              target_values: ["AAPL", "AMZN", "GOOGL", "TSLA"]
          - col_in: user_watch_stk_code
            col_out: user_watch_stk_code
            func_name: padding
            func_parameters:
              max_len: 5
              pad_value: "null"
          - col_in: user_watch_stk_code
            col_out: user_watch_stk_code_hash
            func_name: list_hash
            func_parameters:
              vocabulary_size: 10000

      - feat_name: country_hash
        feat_type: sparse
        vocabulary_size: 200
        embedding_dim: 8
        input_sample: United States
        operations:
          - col_in: country
            col_out: country
            func_name: fillna
            func_parameters:
              na_value: "null"
          - col_in: country
            col_out: country_hash
            func_name: str_hash
            func_parameters:
              vocabulary_size: 200

      - feat_name: prefer_bid_code_hash
        feat_type: varlen_sparse
        vocabulary_size: 10000
        embedding_dim: 8
        input_sample: AAPL#0.24809|AMZN#0.24809|GOOGL#0.24809|TSLA#0.24809
        operations:
          - col_in: prefer_bid
            col_out: prefer_bid
            func_name: fillna
            func_parameters:
              na_value: "null#0"
          - col_in: prefer_bid
            col_out: prefer_bid
            func_name: split
            func_parameters:
              sep: "|"
          - col_in: prefer_bid
            col_out: prefer_bid
            func_name: seperation
            func_parameters:
              sep: "#"
          - col_in: prefer_bid
            col_out: prefer_bid_code
            func_name: list_get
            func_parameters:
              item_index: 0
          - col_in: prefer_bid_code
            col_out: prefer_bid_code
            func_name: padding
            func_parameters:
              max_len: 5
              pad_value: "null"
          - col_in: prefer_bid_code
            col_out: prefer_bid_code_hash
            func_name: list_hash
            func_parameters:
              vocabulary_size: 10000

      - feat_name: hold_bid_code_hash
        feat_type: varlen_sparse
        vocabulary_size: 10000
        embedding_dim: 8
        input_sample: JD,185|BAC,169|TSLA,185
        operations:
          - col_in: holdings
            col_out: holdings
            func_name: fillna
            func_parameters:
              na_value: "null,0"
          - col_in: holdings
            col_out: holdings
            func_name: split
            func_parameters:
              sep: "|"
          - col_in: holdings
            col_out: holdings
            func_name: seperation
            func_parameters:
              sep: ","
          - col_in: holdings
            col_out: hold_bid_code
            func_name: list_get
            func_parameters:
              item_index: 0
          - col_in: hold_bid_code
            col_out: hold_bid_code
            func_name: padding
            func_parameters:
              max_len: 5
              pad_value: "null"
          - col_in: hold_bid_code
            col_out: hold_bid_code_hash
            func_name: list_hash
            func_parameters:
              vocabulary_size: 10000

      - feat_name: user_propernoun_hash
        feat_type: varlen_sparse
        vocabulary_size: 10000
        embedding_dim: 8
        input_sample: "apple#1.02|nike#1.02"
        operations:
          - col_in: user_propernoun
            col_out: user_propernoun
            func_name: fillna
            func_parameters:
              na_value: "null#0"
          - col_in: user_propernoun
            col_out: user_propernoun
            func_name: split
            func_parameters:
              sep: "|"
          - col_in: user_propernoun
            col_out: user_propernoun
            func_name: seperation
            func_parameters:
              sep: "#"
          - col_in: user_propernoun
            col_out: user_propernoun_code
            func_name: list_get
            func_parameters:
              item_index: 0
          - col_in: user_propernoun_code
            col_out: user_propernoun_code
            func_name: padding
            func_parameters:
              max_len: 5
              pad_value: "null"
          - col_in: user_propernoun_code
            col_out: user_propernoun_hash
            func_name: list_hash
            func_parameters:
              vocabulary_size: 10000

      - feat_name: push_title_hash
        feat_type: sparse
        vocabulary_size: 8
        embedding_dim: 8
        input_sample: Breaking News
        operations:
          - col_in: push_title
            col_out: push_title
            func_name: fillna
            func_parameters:
              na_value: "null"
          - col_in: push_title
            col_out: push_title_hash
            func_name: str_hash
            func_parameters:
              vocabulary_size: 8

      - feat_name: title_len
        feat_type: sparse
        vocabulary_size: 32
        embedding_dim: 8
        input_sample: "Hong Kong's Leading Broker Futu Securities Introduces Bitcoin and XRP Trading with Lucrative Incentives"
        operations:
          - col_in: push_content
            col_out: push_content
            func_name: fillna
            func_parameters:
              na_value: "null"
          - col_in: push_content
            col_out: push_content
            func_name: split
            func_parameters:
              sep: " "
          - col_in: push_content
            col_out: title_len
            func_name: list_len
            func_parameters: {}
          - col_in: title_len
            col_out: title_len
            func_name: int_max
            func_parameters:
              max_value: 31
      - feat_name: item_code_hash
        feat_type: varlen_sparse
        vocabulary_size: 10000
        embedding_dim: 8
        input_sample: '[{"market":"185","score":1,"code":"META","name":"Meta","type":0,"parentId":"0339437d07195361"}]'
        operations:
          - col_in: item_code
            col_out: item_code
            func_name: fillna
            func_parameters:
              na_value: '[{"market":"null","score":0,"code":"null","name":"null","type":"null","parentId":"null"}]'
          - col_in: item_code
            col_out: item_code
            func_name: json_object_to_list
            func_parameters:
              key: "code"
          - col_in: item_code
            col_out: item_code
            func_name: padding
            func_parameters:
              max_len: 5
              pad_value: "null"
          - col_in: item_code
            col_out: item_code_hash
            func_name: list_hash
            func_parameters:
              vocabulary_size: 10000
      - feat_name: submit_type_hash
        feat_type: sparse
        vocabulary_size: 10
        embedding_dim: 8
        input_sample: "auto_flash"
        operations:
          - col_in: submit_type
            col_out: submit_type
            func_name: fillna
            func_parameters:
              na_value: "null"
          - col_in: submit_type
            col_out: submit_type_hash
            func_name: str_hash
            func_parameters:
              vocabulary_size: 10
      - feat_name: tag_id_hash
        feat_type: varlen_sparse
        vocabulary_size: 10000
        embedding_dim: 8
        input_sample: '[{"score":0,"tagId":"57967","name":"Fusion","type":4,"parentId":"0339437d07195361"}]'
        operations:
          - col_in: item_tags
            col_out: item_tags
            func_name: fillna
            func_parameters:
              na_value: '[{"score":0,"tagId":"null","name":"null","type":0,"parentId":"null"}]'
          - col_in: item_tags
            col_out: tagIds
            func_name: json_object_to_list
            func_parameters:
              key: "tagId"
          - col_in: tagIds
            col_out: tagIds
            func_name: padding
            func_parameters:
              max_len: 3
              pad_value: "null"
          - col_in: tagIds
            col_out: tag_id_hash
            func_name: list_hash
            func_parameters:
              vocabulary_size: 100
  interactions: # 特征交叉
    embedding_dim: 8
    pooling_type: sum
    pipelines:
      - feat_name: preder_bid_cross
        feat_type: sparse
        vocabulary_size: 2
        embedding_dim: 8
        operations:
          - col_in: [item_code, prefer_bid_code]
            col_out: preder_bid_cross
            func_name: has_intersection
            func_parameters:
              exclude: ["null", "0"]

      - feat_name: watch_bid_cross
        feat_type: sparse
        vocabulary_size: 2
        embedding_dim: 8
        operations:
          - col_in: [item_code, user_watch_stk_code]
            col_out: watch_bid_cross
            func_name: has_intersection
            func_parameters:
              exclude: ["null", "0"]

      - feat_name: hold_bid_cross
        feat_type: sparse
        vocabulary_size: 2
        embedding_dim: 8
        operations:
          - col_in: [item_code, hold_bid_code]
            col_out: hold_bid_cross
            func_name: has_intersection
            func_parameters:
              exclude: ["null", "0"]

  label_process:
    pipelines:
      - feat_name: log_type
        feat_type: sparse
        vocabulary_size: 2
        embedding_dim: 8
        input_sample: "0"
        operations:
          - col_in: log_type
            col_out: log_type
            func_name: fillna
            func_parameters:
              na_value: "PR"
          - col_in: log_type
            col_out: log_type
            func_name: map_to_int
            func_parameters:
              map_dict:
                PR: 0
                PC: 1
              default_code: 0

train:
  boosting_type: "gbdt"
  num_leaves: 31
  max_depth: 5
  learning_rate: 0.01
  metric: "auc"
  objective: "binary"
  feature_fraction: 0.9
  num_iterations: 300
  early_stopping_rounds: 50
  subsample: 0.8
  colsample_bytree: 0.8


hdfs:
  api_url: "http://ainvest-recsys-platform-server-0-prod.default:9595/recsys/api/bigFileUploader/"
  base_model_hdfs_dir: "dongshaojie/ainvest_push/" # HDFS模型基础目录
  model_version: "tree_model_B" # base_model_hdfs_dird的下一级文件夹

serve:
  # 下载调度相关配置
  scheduling:
    download_start_hour: 3
    download_start_minute: 0
    hour_task_minute: 35 # 每小时的35分执行下载任务
    download_max_try: 3 # 下载最大尝试次数
  # 用户数据处理相关配置
  data_handling:
    user_data_dir: data/user
    new_user_data_dir: data/new_user # 当天的新用户数据目录
    user_data_sql_dir: data/user.sql # 用户数据SQL文件目录
    new_user_data_sql_dir: data/new_user.sql # 当天新用户数据SQL文件目录
    user_data_save_days: 5 # 保留的数据文件数量，近N天
    user_data_file_num: 5 # 用户数据文件数量 (这个参数的含义需要结合代码理解，如果指每个用户的数据文件数量，可能需要调整位置或命名)
    max_user_num_per_iter: 20000 # 每次迭代处理的最大用户数
    # 用户数据格式配置
    data_format:
      sep: '\t'
      header: null
      data_index: user_id
      data_columns:
        - user_id
        - watchlists
        - holdings
        - country
        - prefer_bid
      varlen_max_col_num: 5 # 可变长度特征的最大列数 (这个参数的含义需要结合代码理解，如果与数据格式相关，放在这里)
  # 外部服务地址配置
  services:
    push_server_url_v2: http://aime-recsys-push-server-prod:10010/aime/recsys/api/push/v2
    push_server_url_v3: http://aime-recsys-push-server-prod:10010/aime/recsys/api/push/v3
  # 模型配置列表
  models:
    - name: "model_a"
      hdfs_relative_path: "tree_model/model_a.txt" # HDFS相对路径
      local_name: "model_a.txt" # 本地保存的文件名
      type: "lightgbm"
      description: "用于ID尾号为奇数的用户"
    - name: "model_b"
      hdfs_relative_path: "tree_model/model_b.txt" # HDFS相对路径
      local_name: "model_b.txt" # 本地保存的文件名
      type: "lightgbm"
      description: "用于ID尾号为偶数的用户"
